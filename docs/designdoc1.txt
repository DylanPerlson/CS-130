CS130 Project 1 - Design Document
=================================

Please answer all questions in this design document.  Note that the final
feedback section is optional, and you are not required to answer it if you
don't want to.

Unanswered or incompletely answered questions, or answers that don't actually
match the code/repository, will result in deductions.

Answers don't have to be deeply detailed!  We are mainly looking for an
overview or summary description of how your project works, and your team's
experiences working on this project.

Logistics (7 pts)
------------------

L1.  [2pts] Enumerate all teammates here.
Aaron Tran, Dylan Perlson, Pieter van Santvliet

L2.  [2pts] What did each teammate focus on during this project?
Aaron - Cell and cell error functionality, topological sort algorithm, unit testing 
Dylan - Workbook and sheet functionality and coverage of edge cases, unit testing
Pieter - Lark formula parser and Decimal functionality, unit testing

L3.  [3pts] Approximately how many hours did each teammate spend on the project?
We mostly worked on it together simultaneously; everyone spent roughly 22 hours on this project.

Spreadsheet Engine Design (20 pts)
----------------------------------

D1.  [3pts] Describe the high-level design abstractions (e.g. classes and/or
     submodules) in your spreadsheet engine, and what purposes these various
     abstractions fulfill.
There are 5 central modules in our design: a workbook, sheet, cell, cell error and parser module.
The modules are self-explanatory: the workbook contains an array of sheets, sheets contain dictionaries of cells,
and cells can store cell errors and formulas that can be parsed with the parser module. 

D2.  [4pts] Why did you choose the design you chose?  Describe other designs
     (or perhaps earlier versions of the above design) that you considered,
     and why you ended up not using them.
We opted to compartamentalize the individual components in order to make it easier to add invididual functions
to each module in future projects and to streamline unit testing. One consideration involved putting cell errors
into the same file as Cell, but we opted not to due to a lap of overlap (in our opinions).

D3.  [4pts] At a high level (e.g. pseudocode or higher), enumerate the steps
     that your spreadsheet engine goes through when a caller sets a cell's
     contents.
First, the engine checks if the sheet and cell that the user wants to set a value in is valid (i.e. the sheet exists
and is within the maximum range. If the new cell exceeds the maximum of the current's sheet, the extent is 
updated to compensate. Finally, a set_cell_contents function is called and a new cell object is created with 
the contents being the user specified value and a type given to the cell based on input.


D4.  [3pts] How does your spreadsheet engine identify what other cells need
     updating when a cell's contents are changed, and what order to update them?
Although this is not functional yet, we have included prototype code for a topological sort algorithm
using Kosaraju's algorithm as was hinted at in the specs. This would carry out the algorithm every time
a new cell is set that contains a formula that references in a cell in which it would go through and 
determine all dependencies and via DFS and using a stack determine the order in which to evaluate them.

D5.  [3pts] How does your spreadsheet engine identify cycles between cells when
     a cell update is performed?  Are cells in a cycle processed any differently
     from other cells outside of the cycle?
As pointed out in D4, whilst the algorithm has not been implemented yet, it will also have functionality
to track and circular reference cells. Once they have been determined, their values will be set to a 
Cell Error of Circular Reference and that value will be propogated to all cells in the cycle. Any remaining
cells not affected by this will be evaluated like normal in the topologically sorted order.

D6.  [3pts] What steps does your spreadsheet engine go through when a sheet is
     deleted from a workbook?  How does it identify cells that may be affected
     by the sheet-deletion?
When a sheet is deleted, the program will parse over all sheets and determine if any cell has a formula
that reference a cell within the sheet; their values will then be set to a bad reference error due to pointing to
a cell that no longer exists. Once all that has been handled, the sheet object with the corresponding name 
will be deleted from the parent workbook and the number of sheets reduced by 1.

Implementation Process (23 pts)
-------------------------------

P1.  [4pts] How did your team break down and keep track of the various tasks to
     complete for this project?  Did you use the GitHub issue tracker, or some
     other system like Trello, or some other tool?
We used a Whiteboard-like program to sketch out the design of the product and used a Google document to keep track of tasks to do. Tasks were highlighted based on priority/difficulty
and were crossed out when they were completed.

P2.  [4pts] How did you assign tasks to teammates?  Did you stick with your
     task-assignments through the project, or did you shift around tasks as the
     project progressed?  Why?
For the most part, all members took an open task after going over what needed to be accomplished that day.
Members stuck to their own task a majority of the time, although if one member was struggling on something they might 
switch over to offer some assistance/new perspective. 

P3.  [4pts] How would you characterize the quality of your project testing?
     Make sure to touch on these items:  Is it automated?  Is it easy for
     teammates to run?  Is it fast?  Is it reasonably complete?
While testing was not automated (we will attempt to do this next project), it was easy to run since it 
was in a dedicated test file. The tests took around a second to run and covered positive, negative, and edge cases making it reasonably complete.

P4.  [3pts] What mechanisms did your team use for communication during the
     project?  Did you find them to be effective?  What issues did you
     encounter, if any?
We started with a discord group chat before eventually moving to a Whatsapp group. The group chat was effective;
members responded within a reasonable amount of time and no one was ever left hanging for too long.

P5.  [3pts] Did you use any kind of collaborative construction techniques, e.g.
     code reviews or pair-programming, during the project?  If so, what are your
     observations about its usefulness?  Did you find it to have any downsides?
The group met together in a conference room several times during the project period and pair programming was
done in these sessions. We also took advantage of VS Code's LiveShare feature to work on one file at the same time
when we couldn't meet up in person. While this made it easier for everyone to understand what changes people
were making, occasionally we would stall in development due to differences in how to proceed forward.

P6.  [5pts] What would you like to improve about your team's development
     process, going forward?

Given how long this first project took, we plan to meet more in person to become more productive.
We also plan to integrate automated testing and take advantage of branches more often (which we picked up
more on towards the latter half of this project). 


Section F:  CS130 Project 1 Feedback [OPTIONAL]
-----------------------------------------------

These questions are OPTIONAL, and you do not need to answer them.  Your grade
will not be affected by answering or not answering them.  Also, your grade will
not be affected by negative feedback - we want to know what went poorly so that
we can improve future versions of the course.

F1.  What parts of the assignment did you find highly enjoyable?  Conversely,
     what parts of the assignment did you find unenjoyable?


F2.  What parts of the assignment helped you learn more about software
     engineering best-practices, or other useful development skills?
     What parts were not helpful in learning these skills?


F3.  Were there any parts of the assignment that seemed _unnecessarily_ tedious?
     (Some parts of software development are always tedious, of course.)


F4.  Do you have any feedback and/or constructive criticism about how this
     project can be made better in future iterations of CS130?