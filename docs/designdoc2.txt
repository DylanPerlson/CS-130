CS130 Project 2 - Design Document
=================================

Please answer all questions in this design document.  Note that the final
feedback section is optional, and you are not required to answer it if you
don't want to.

Unanswered or incompletely answered questions, or answers that don't actually
match the code/repository, will result in deductions.

Answers don't have to be deeply detailed!  We are mainly looking for an
overview or summary description of how your project works, and your team's
experiences working on this project.

Logistics (7 pts)
-----------------

L1.  [2pts] Enumerate all teammates here.

Aaron Tran, Dylan Perlson, Pieter Van Santvliet

L2.  [2pts] What did each teammate focus on during this project?

Aaron - Reordering and copying sheets, cell updates
Pieter - Loading/saving workbooks, bugs of project1, performance tests
Dylan - Renaming sheets, performance tests, debugging

L3.  [3pts] Approximately how many hours did each teammate spend on the project?

Everyone spent roughly 20 hours on the project.

Spreadsheet Engine Design (16 pts)
----------------------------------

D1.  [4pts] Briefly describe how your workbook-loading code operates.  Does
     it do anything sophisticated to optimize the performance of loading a
     workbook, such as deferring cell-value update calculations, or analyzing
     the graph of cell dependencies?

At the moment workbooks are loaded from the json file by adding the contents 
to the cell as if it were done in the python script. No other specific sophisticated things are happening. 
the loading does not calculate value when loading from the json and will only calculate it if get_cell_value is invoked on 
the cell directly (or a dependent cell) at some point later on in order to save time parsing the workbook's values upon loading.

D2.  [4pts] Sheet-level operations like copying a sheet, deleting a sheet,
     renaming a sheet, or even creating a new sheet, can cause cell values
     to be updated.  How does your workbook identify such cells and ensure
     that they are updated properly?

After renaming a sheet, the worbook goes through every sheet and their cells and checks if it is an equation.
If it is, then it checks to see if the old sheet name is in the equation, and if it is it is swapped out with the new 
sheet name. creating a new sheet and copying a sheet should not cause problems, as the original sheets referenced would still
be there. As for deleting a sheet, that is handled in the error handling if a mentioned sheet in an equation is deleted.


D3.  [8pts] When renaming a sheet, cells with formulas that explicitly
     reference the renamed sheet must be updated with the new sheet name.
     Give an overview of how your implementation updates these formulas.

After renaming a sheet, the worbook goes through every sheet and all of their cells and checks if it is an equation.
If it is, then it checks to see if the old sheet name is in the contents of that cell, and if it is the old sheet name 
is swapped out with the new sheet name.


Spreadsheet Engine Code Review (24 pts)
---------------------------------------

R1.  [4pts] What part of your spreadsheet code-base did your team select to
     review?  Why did you select this portion of your code to review?

The on_cell_updates due to its complex nature and how it tied back to circular references that we missed the first time. 
Also, Aaron had originally written this code, we wanted to avoid him being the only one able to work on it. 
By doing a code review we made sure everyone was completely up to date on this part of the code as well as fixing bugs that 
Aaron was having issues with by himself.

R2.  [4pts] Approximately how much code did your team review?  How much time did
     the meeting take?

Roughly 220 lines of code were reviewed. The meeting lasted about an hour.

R3.  [8pts] Include the list of action-items that were generated by the
     code-review here.

- copy sheet does not copy over the cells of the sheet
- display cells listing the wrong cells as updated
- remove code redunancies
- circular reference error not working
- getting display cell updates to show cells that are changed if dependant on another cell

R4.  [4pts] Have you been able to address the action items identified?  If not,
     what is your plan and timeframe to do so?

We were able to fix the issue with copy sheet not copying over the cells, and the display cell updates displaying the wrong cells, as well
as code redundancies, however we were unable to fix the last two because we ran out of time before we could figure out a way to fix them. 
We plan to prioritize is at the start of the next project or may be patched out prior to the next project's release. 

R5.  [4pts] Reflect on whether the code review helped with knowledge-sharing in
     the team.  Do teammates feel more confident maintaining the code that was
     reviewed, and/or extending the code in the future?

The code review was productive, as the teammates not familiar with the cell update functionality are now. 
This will defintely be useful in the future (we are better able to help each other, but we can also work separately on all pieces of the code).
Additionally, we noticed certain areas where the way we were writing code in our own sections, could possibly create bugs in the cell update portion.

Performance Analysis (22 pts)
-----------------------------

In this project you must measure and analyze the performance of two central
areas of your spreadsheet engine.  Using pair programming, construct some
performance tests to exercise these aspects of your engine, and use a profiler
to identify where your program is spending the bulk of its time.

A1.  [4pts] Briefly enumerate the performance tests you created to exercise
     your implementation, along with the teammates that collaborated to
     implement each of them.

Dylan and Pieter pair programmed to make all performance tests.
They made a tests that evaluate a long chain of references, a cell with many dependencies, a cell that many cells depend on, and cycles of many cells.

A2.  [4pts] What profiler did you choose to run your performance tests with?
     Why?  Give an example of how to invoke one of your tests with the profiler.

We used cProfile, it's built-in so we wouldn't have installation issues. Also, because it is so standard we thought 
it would be specifically useful to be able to work with this one. 

    import cProfile
    from pstats import Stats

    pr = cProfile.Profile()
    pr.enable()

    code_we_want_to_test()

    pr.disable()
    stats = Stats(pr)
    stats.sort_stats('tottime').print_stats(5)


A3.  [8pts] What are ~3 of the most significant hot-spots you identified in your
     performance testing?  Did you expect these hot-spots, or were they
     surprising to you?

As expected, lark takes a lot of time. Besides that, the regular built-in functions isinstance and getattr take a lot of time. 
This is not surprising because they are often used in many (built-in) functions. Lastly, functions like 'append' and 'match' take a lot of time.
 Once again, not very surprising because of how common they are throughout our code. However, we would not have specifically said that those
exact functions would be the reason for such a slow down in our code.

A4.  [6pts] Reflect on the experience of pair-programming as you constructed
     these tests.  What went well with it?  What would you like to try to do
     better in the future?

The pair programming was surprisingly useful. Every few lines of code the navigator would make a small remark of how the 
code did not do exactly as intended. We're quite sure we saved a lot of time by not having to run into these bugs later.
Probably the pair programming would have been even more useful if we had been writing code for that part of the API (instead of a test). 
Making the tests together occasionally took longer than necessary sometimes because two people were working on one thing.


Section F:  CS130 Project 3 Feedback [OPTIONAL]
-----------------------------------------------

These questions are OPTIONAL, and you do not need to answer them.  Your grade
will not be affected by answering or not answering them.  Also, your grade will
not be affected by negative feedback - we want to know what went poorly so that
we can improve future versions of the course.

F1.  What parts of the assignment did you find highly enjoyable?  Conversely,
     what parts of the assignment did you find unenjoyable?

The saving/loading was quite interesting because we needed to get acquainted with json.
The cell update code was very difficult to implement and did not feel particularly useful.

F2.  What parts of the assignment helped you learn more about software
     engineering best-practices, or other useful development skills?
     What parts were not helpful in learning these skills?

As mentioned above, the json code was very interesting.

F3.  Were there any parts of the assignment that seemed _unnecessarily_ tedious?
     (Some parts of software development are always tedious, of course.)

Cell updating was very tedious. Probably it would have also been tedious in 'real life' but nonetheless 
it was defintely a lot of work and influenced how well we could participate in other courses.

F4.  Do you have any feedback and/or constructive criticism about how this
     project can be made better in future iterations of CS130?

Some time that is dedicated solely to improving project1 code would have been nice. 
Now, the time we put in debugging project1 code influenced our project2 work.